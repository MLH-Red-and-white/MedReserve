[{"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\index.js":"1","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\reportWebVitals.js":"2","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\App.js":"3","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\firebase.js":"4","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\reducers\\index.js":"5","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\components\\reserveForm.js":"6","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\reducers\\applicantReducer.js":"7","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\actions\\types.js":"8","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\actions\\applicantActions.js":"9","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\components\\successForm.js":"10"},{"size":1658,"mtime":1608390523877,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1608372190368,"results":"13","hashOfConfig":"12"},{"size":737,"mtime":1608397171147,"results":"14","hashOfConfig":"12"},{"size":574,"mtime":1608386497606,"results":"15","hashOfConfig":"12"},{"size":339,"mtime":1608375250193,"results":"16","hashOfConfig":"12"},{"size":12648,"mtime":1608423525939,"results":"17","hashOfConfig":"12"},{"size":924,"mtime":1608391020961,"results":"18","hashOfConfig":"12"},{"size":153,"mtime":1608377946669,"results":"19","hashOfConfig":"12"},{"size":1087,"mtime":1608392411645,"results":"20","hashOfConfig":"12"},{"size":1141,"mtime":1608399445658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1tziq2l",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\index.js",["46","47","48","49"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport firebase from \"firebase/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  reduxFirestore,\r\n  getFirestore,\r\n  createFirestoreInstance,\r\n  firestoreReducer,\r\n} from \"redux-firestore\";\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer,\r\n} from \"react-redux-firebase\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./firebase\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reactReduxFirebase(fbConfig, {\r\n      applicantProfile: \"applicants\",\r\n    }),\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // <- needed if using firestore\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// registerServiceWorker();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["50","51"],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\reportWebVitals.js",[],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\App.js",[],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\firebase.js",[],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\reducers\\index.js",[],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\components\\reserveForm.js",["52","53","54","55","56","57","58"],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\reducers\\applicantReducer.js",["59","60","61"],"import { firestoreConnect } from \"react-redux-firebase\";\r\nimport * as types from \"../actions/types\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst initialState = {\r\n  age: 0,\r\n  email: \"\",\r\n  gender: \"\",\r\n  covid19_positive: false,\r\n  name: \"\",\r\n  hospitals_applied_to: [],\r\n  name: \"\",\r\n  phone_number: \"\",\r\n  symptoms: [],\r\n  hospitals: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_APPLICANT:\r\n      console.log(\"create applicant success\");\r\n      // firebase\r\n      //   .database()\r\n      //   .ref(\"applicants\")\r\n      //   .on(\"value\", (snapshot) => {\r\n      //     snapshot.forEach((snap) => {\r\n      //       console.log(snap.val());\r\n      //     });\r\n      //   });\r\n      return state;\r\n\r\n    case types.GET_HOSPITALS:\r\n      console.log(\"getHospital\");\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\actions\\types.js",[],"C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\actions\\applicantActions.js",["62","63"],"import * as types from \"./types\";\r\nimport firebase from \"../firebase\";\r\n\r\nexport const addApplicant = (applicant) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"applicants\")\r\n      .add({\r\n        ...applicant,\r\n        age: parseInt(applicant.age),\r\n        createdAt: new Date(),\r\n        covid19_positive: applicant.covid19_positive.toLowerCase() == \"true\",\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: types.ADD_APPLICANT });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: types.ADD_APPLICANT_ERROR }, err);\r\n      });\r\n  };\r\n};\r\n\r\n// export const getHospitals = () => {\r\n//   return (dispatch, getState, { getFirestore }) => {\r\n//     const firestore = getFirestore();\r\n//     firebase\r\n//       .database()\r\n//       .ref(\"hospitals\")\r\n//       .on(\"value\", (snapshot) => {\r\n//         snapshot.forEach((snap) => {\r\n//           console.log(snap.val());\r\n//         });\r\n//       });\r\n//     dispatch({\r\n//       type: types.GET_HOSPITALS,\r\n//     });\r\n//   };\r\n// };\r\n","C:\\Users\\gilbe\\Desktop\\MedReserve\\src\\components\\successForm.js",["64","65","66","67","68","69","70","71","72"],{"ruleId":"73","severity":1,"message":"74","line":15,"column":3,"nodeType":"75","messageId":"76","endLine":15,"endColumn":19},{"ruleId":"73","severity":1,"message":"77","line":18,"column":3,"nodeType":"75","messageId":"76","endLine":18,"endColumn":29},{"ruleId":"73","severity":1,"message":"78","line":19,"column":3,"nodeType":"75","messageId":"76","endLine":19,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":40,"column":7,"nodeType":"75","messageId":"76","endLine":40,"endColumn":15},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"73","severity":1,"message":"84","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":15},{"ruleId":"73","severity":1,"message":"85","line":12,"column":3,"nodeType":"75","messageId":"76","endLine":12,"endColumn":6},{"ruleId":"73","severity":1,"message":"86","line":17,"column":3,"nodeType":"75","messageId":"76","endLine":17,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":49,"column":38,"nodeType":"89","messageId":"90","endLine":49,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":74,"column":38,"nodeType":"89","messageId":"90","endLine":74,"endColumn":40},{"ruleId":"87","severity":1,"message":"91","line":246,"column":32,"nodeType":"89","messageId":"90","endLine":246,"endColumn":34},{"ruleId":"87","severity":1,"message":"91","line":322,"column":34,"nodeType":"89","messageId":"90","endLine":322,"endColumn":36},{"ruleId":"73","severity":1,"message":"92","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"93","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":12,"column":3,"nodeType":"96","messageId":"90","endLine":12,"endColumn":7},{"ruleId":"73","severity":1,"message":"93","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"91","line":13,"column":68,"nodeType":"89","messageId":"90","endLine":13,"endColumn":70},{"ruleId":"73","severity":1,"message":"97","line":2,"column":3,"nodeType":"75","messageId":"76","endLine":2,"endColumn":9},{"ruleId":"73","severity":1,"message":"98","line":3,"column":3,"nodeType":"75","messageId":"76","endLine":3,"endColumn":7},{"ruleId":"73","severity":1,"message":"99","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"84","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":15},{"ruleId":"73","severity":1,"message":"100","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":8},{"ruleId":"73","severity":1,"message":"85","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":6},{"ruleId":"73","severity":1,"message":"101","line":8,"column":3,"nodeType":"75","messageId":"76","endLine":8,"endColumn":8},{"ruleId":"73","severity":1,"message":"102","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":12},{"ruleId":"73","severity":1,"message":"86","line":13,"column":3,"nodeType":"75","messageId":"76","endLine":13,"endColumn":13},"no-unused-vars","'firestoreReducer' is defined but never used.","Identifier","unusedVar","'ReactReduxFirebaseProvider' is defined but never used.","'firebaseReducer' is defined but never used.","'rrfProps' is assigned a value but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'FormFeedback' is defined but never used.","'Row' is defined but never used.","'CardFooter' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'firestoreConnect' is defined but never used.","'firebase' is defined but never used.","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]